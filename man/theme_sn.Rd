% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme_sn.R
\name{theme_sn}
\alias{theme_sn}
\title{A ggplot theme}
\usage{
theme_sn(
  type = "line",
  base_size = 36/3,
  base_family = "sans",
  base_line_size = base_size * 0.35/36 * 3,
  base_rect_size = base_size * 0.35/36,
  facet = F,
  colors = "default"
)
}
\arguments{
\item{type}{Text indicating the type of plot the theme is being used for.  Supported types are currently 'line', 'bar', 'hist', 'grid', 'scatter' which can be used for plots with `geom_line`, `geom_bar`, `geo_histogram`, `geom_tile`, and `geom_point`.  Other plot types will be added later.}

\item{base_size}{base font size, given in pts. For saving images, 36 is required. For viewing in RStudio, something much smaller like 36/3 = 12 (the default) is recommended.}

\item{base_family}{base font family.  The default is `'sans'`, which is available cross-platform by default.}

\item{base_line_size}{base size for line elements. Default is `base_size*.35/36`, and should typically not be changed.}

\item{base_rect_size}{base size for rect elements. Default is `base_size*.35/36`, and should typically not be changed.}

\item{facet}{Indicates whether or not `facet_wrap` or `facet_grid` are being used for this plot.  The default is `facet=FALSE`.}

\item{colors}{Choose the color palette. The default, colors='default", is reds, blues and grays commonly used in journalism.  'cb14' is a colorblind friendly palette with 14 colors, and 'cmu' is reds, blues, grays}
}
\value{
When used in conjunction with ggplot, it returns a plot formatted using the sn theme.
}
\description{
A ggplot theme for making uniformly formatted viz in the SCORE network
}
\examples{

library(themesn)

## Scatter plot example
dg = mtcars \%>\% select(wt, mpg)
title = 'Title in Upper Lower' ## to be used by ggplot and ggsave
g = ggplot(dg, aes(x=wt, y=mpg))+
  geom_point(color=snred)+
  labs(title    = title,
       subtitle = 'Optional Subtitle In Upper Lower',
       caption  = "Optional caption, giving additional information",
       x = 'Horizontal Axis Label in Upper Lower',
       y = 'Vertical Axis Label in Upper Lower')+
  scale_x_continuous(limits=c(0, 6), breaks=c(0, 3, 6), oob=squish)+
  scale_y_continuous(limits=c(0,40), breaks=c(0,20,40), oob=squish)+
  coord_cartesian(clip='off', expand=FALSE)+
  theme_sn(type='scatter', base_size = 36/3) ## use 36/3=12 in RStudio, use 36 to save as image
print(g)

## Use `ggsave` and `base_size=36` when saving an image.
## Do not adjust the width. Height can be adjusted if desired.
## A square image is often preferred, so when in doubt, keep height at 20.
ggsave(filename=paste0('img/', title, '.jpg'), ## must have a subfolder called 'img'
       plot=g + theme_sn(type='scatter', base_size=36),
       width=20,   ## do not change
       height=20,  ## can change if desired. In most cases, a square figure (height=20) is probably preferred.
       units='in', ## do not change
       dpi=72)     ## do not change

## Line plot
dg = economics_long
dg = dg \%>\% mutate(variable = toupper(variable)) ## avoid using all lowercase letters in a legend
title = 'Title in Upper Lower' ## to be used by ggplot and ggsave
g = ggplot(dg, aes(x=date, y=value01, color=variable))+
 geom_line()+
  labs(title    = title,
       subtitle = 'Optional Subtitle In Upper Lower',
       caption  = "Optional caption, giving additional information",
              x = 'Horizontal Axis Label in Upper Lower', ## Required.
              y = 'Vertical Axis Label in Upper Lower')+  ## Required.
 scale_x_date() + ## set limits and breaks. In this case, the defaults are fine.
 scale_y_continuous(limits=c(0,1), breaks=c(0, .5, 1))+ ## Required
 coord_cartesian(clip='off', expand=FALSE)+
 theme_sn(type='line', base_size=36/3) ## Use 36/3=12 or smaller in RStudio, use 36 to save as image

print(g)

## Notes:
## Upper Lower means First letter of each word capitalized
## mult=c(0,0) removes the default padding.
## breaks=c(0,.5,1) sets 3 lines at top, middle, and bottom.

## Use `ggsave` and `base_size=36` when saving an image.
## Do not adjust the width. Height can be adjusted if desired.
## A square image is often preferred, so when in doubt, keep height at 20.
ggsave(filename=paste0('img/', title, '.jpg'), ## must have a subfolder called 'img'
       plot=g + theme_sn(type='line', base_size=36),
       width=20,   ## do not change
       height=20,  ## can change if desired. In most cases, a square figure (height=20) is probably preferred.
       units='in', ## do not change
       dpi=72)     ## do not change


## Histogram example
dg = economics \%>\% filter(date<='2008-01-01')
title = 'Title in Upper Lower' ## to be used by ggplot and ggsave
g  = ggplot(dg, aes(x=unemploy))+
  geom_histogram(fill=snred, color=snbackgray, binwidth=500) + ## set a reasonable binwidth
  labs(title    = title,
       subtitle = 'Optional Subtitle In Upper Lower',
       caption  = "Optional caption, giving additional information",
       x = 'Horizontal Axis Label in Upper Lower', ## Required.
       y = 'Count')+  ## Usually don't need to change. Can use 'Frequency' or 'Density'
  scale_y_continuous(expand = c(0,0))+
  theme_sn(type='hist', base_size=36/3) ## use 12 to show in RStudio, use 36 to save as image

print(g)

## Use `ggsave` and `base_size=36` when saving an image.
## Do not adjust the width. Height can be adjusted if desired.
## A square image is often preferred, so when in doubt, keep height at 20.
ggsave(filename=paste0('img/', title, '.jpg'), ## must have a subfolder called 'img'
       plot = g + theme_sn(type='hist', base_size=36),
       width=20,   ## do not change
       height=20,  ## can change if desired. In most cases, a square figure (height=20) is probably preferred.
       units='in', ## do not change
       dpi=72)     ## do not change

## Bar plot example
dg = mtcars \%>\%
  group_by(cyl) \%>\%
  summarise(mpg = mean(mpg)) \%>\%
  mutate(cyl = paste0(cyl, '-cylinder'), ## so that labels look nicer
         cyl = factor(cyl, levels=c('8-cylinder', '6-cylinder', '4-cylinder')), ## change order of factors
         max = 35) ## same number as upper limit below
title = 'Title in Upper Lower' ## to be used by ggplot and ggsave
g = ggplot(dg, aes(x=mpg, y=cyl))+
  geom_bar(stat='identity', aes(x=max), color=NA, fill=snlightgray, width=0.8)+ ## option full-length gray bars in the background. Use same number as in `limits` below
  geom_bar(stat='identity', fill=snred, color=NA, width=0.8)+ ## the 0.8 increases the gap between bars
  geom_text(aes(label=round(mpg,2)), hjust=-0.1)+ ## optionally, add numbers with reasonable number of digits
  labs(title    = title,
       subtitle = 'Optional Subtitle In Upper Lower',
       caption  = "Optional caption, giving additional information",
       x = 'Horizontal Axis Label in Upper Lower', ## Optional. If used, use Upper Lower.
       y = NULL)+  ## Optional. If used, use Upper Lower. If not used, use y=NULL. Do not use y=''.
  scale_x_continuous(limits=c(0,35))+ ## add expansion or change limits so the text fits
  theme_sn(type='bar', base_size=36/3) ## use 12 to show in RStudio, use 36 to save as image

print(g)

## Use `ggsave` and `base_size=36` when saving an image.
## Do not adjust the width. Height can be adjusted if desired.
## A square image is often preferred, so when in doubt, keep height at 20.
ggsave(filename=paste0('img/', title, '.jpg'), ## must have a subfolder called 'img'
       plot = g + theme_sn(type='bar', base_size=36),
       width=20,   ## do not change
       height=15,  ## can change if desired. In most cases, a square figure (height=20) is probably preferred.
       units='in', ## do not change
       dpi=72)     ## do not change

## Grid plot example
dg = airquality \%>\%
  mutate(Month= month.abb[Month],
         Month = factor(Month, levels=rev(month.abb))) # use rev for May at top, Sep at bottom
title = 'Title in Upper Lower' ## to be used by ggplot and ggsave

g = ggplot(dg, aes(x=Day, y=Month, fill=Temp))+
  #g = ggplot(dg, aes(x=carat, y=color, fill=price))+
  geom_tile(size=0.4, show.legend = F) +
  scale_fill_gradient(low = snbackgray,
                      high = snred,
                      na.value = 'white',
                      oob=squish) +
  labs(title    = title,
       subtitle = 'Optional Subtitle In Upper Lower',
       caption  = "Optional caption, giving additional information",
       x = 'Day (Optional Axis Label in Upper Lower)', ## Optional
       y = NULL)+  ## Optional. If used, use Upper Lower. If not used, use y=NULL. Do not use y=''.
  geom_vline(xintercept=1:(length(unique(dg$Day ))+1)-.5, color=sndarkgray, size=0.2)+ # vert  lines
  geom_hline(yintercept=1:(length(unique(dg$Month   ))+1)-.5, color=sndarkgray, size=0.2)+ # horiz lines between each square
  scale_x_continuous(expand = c(0, 0), position='top', breaks=seq(2,30,by=2))+
  scale_y_discrete(expand = c(0, 0)) +
  theme_sn(type='grid', base_size=36/3) ## use 16 or 12 to show in RStudio, use 36 to save as image

print(g)


## Use `ggsave` and `base_size=36` when saving an image.
## Do not adjust the width. Height can be adjusted if desired.
## When in doubt, choose height so that the tiles are square
ggsave(filename=paste0('img/', title, '.jpg'), ## must have a subfolder called 'img'
       plot=g + theme_sn(type='grid', base_size=36),
       width=20,   ## do not change
       height=10,  ## can change if desired. In this case, 10 is used to make the tiles square
       units='in', ## do not change
       dpi=72)     ## do not change


## Faceting example
dg = mtcars \%>\%
  select(wt, mpg, cyl) \%>\%
  mutate(cyl = paste0(cyl, '-cylinder'))
title = 'Title in Upper Lower' ## to be used by ggplot and ggsave

g = ggplot(dg, aes(x=wt, y=mpg))+
  geom_point(color=snred)+
  labs(title    = title,
       subtitle = 'Optional Subtitle In Upper Lower',
       caption  = "Optional caption, giving additional information",
       x = 'Horizontal Axis Label in Upper Lower',
       y = 'Vertical Axis Label in Upper Lower')+
  scale_x_continuous(limits=c(0, 6), breaks=c(0, 3, 6), oob=squish)+
  scale_y_continuous(limits=c(0,40), breaks=c(0,20,40), oob=squish)+
  coord_cartesian(clip='off', expand=FALSE)+
  theme_sn(type='scatter', base_size = 36/3) ## use 36/3=12 in RStudio, use 36 to save as image
print(g)

g = g +
  facet_wrap(~cyl, nrow=1) +
  theme_sn(type='scatter', base_size=36/3, facet=T)
print(g)

## Use `ggsave` and `base_size=36` when saving an image.
## Do not adjust the width. Height can be adjusted if desired.
## Square images are often preferred, so when in doubt, choose height so that each subplot is square.
ggsave(filename=paste0('img/', title, '.jpg'), ## must have a subfolder called 'img'
       plot=g + theme_sn(type='scatter', base_size=36, facet=T),
       width=20,   ## do not change
       height=13,  ## can change if desired. Here, 13 was chosen so that each subplot is square
       units='in', ## do not change
       dpi=72)     ## do not change

}
